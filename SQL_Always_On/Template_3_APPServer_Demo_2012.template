{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description"              : "**Version 1.0** STEP-3 This template creates and installs a Windows Server 2012 based application server for testing purposes into a subnet inside a VPC. **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
    "Parameters"               : {
        "KeyPairName" : {
            "Description" : "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type"        : "String"
        },
        "AppServerInstanceType" : {
            "Description" : "Amazon EC2 instance type for the 1st WSFC Node",
            "Type"        : "String",
            "Default"     : "m1.large",
            "AllowedValues" : [
                "m1.large",
                "m1.xlarge",
                "m2.4xlarge"
            ],
            "ConstraintDescription" : "Only EBS Optimized instance types m1.large, m1.xlarge, m2.4xlarge allowed"
        },
        "DomainDNSName"         : {
            "Description" : "Fully qualified domain name (FQDN) of the forest root domain e.g. corp.example.com",
            "Type"        : "String",
            "Default"     : "contoso.com",
            "MinLength"   : "3",
            "MaxLength"   : "25",
            "AllowedPattern" : "[a-zA-Z0-9]+\\..+"
        },
        "DomainNetBIOSName"     : {
            "Description" : "NetBIOS name of the domain (upto 15 characters) for users of earlier versions of Windows e.g. CORP",
            "Type"        : "String",
            "Default"     : "contoso",
            "MinLength"   : "1",
            "MaxLength"   : "15",
            "AllowedPattern" : "[a-zA-Z0-9]+"
        },
        "AppServerNetBIOSName"  : {
            "Description" : "NetBIOS name of the 1st WSFC Node (up to 15 characters)",
            "Type"        : "String",
            "Default"     : "APPServer1",
            "MinLength"   : "1",
            "MaxLength"   : "15",
            "AllowedPattern" : "[a-zA-Z0-9]+"
        },
        "DomainAdminUser"       : {
            "Description" : "User name for the account that will be added as Domain Administrator. This is separate from the default \"Administrator\" account",
            "Type"        : "String",
            "Default"     : "StackAdmin",
            "MinLength"   : "5",
            "MaxLength"   : "25",
            "AllowedPattern" : "[a-zA-Z0-9]*"
        },
        "DomainAdminPassword"   : {
            "Description" : "Password for the domain admin user. Must be at least 8 characters containing letters, numbers and symbols",
            "Type"        : "String",
            "MinLength"   : "8",
            "MaxLength"   : "32",
            "AllowedPattern" : "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "NoEcho"         : "true",
            "Default"        : "Password123"
        },
        "ADServer1PrivateIp"    : {
            "Description" : "Fixed private IP for the first Active Directory server located in AZ1",
            "Type"        : "String",
            "Default"     : "10.0.1.10"
        },
        "ADServer2PrivateIp"    : {
            "Description" : "Fixed private IP for the second Active Directory serverr located in AZ2",
            "Type"        : "String",
            "Default"     : "10.0.5.10"
        },
        "DomainMemberSGID"      : {
            "Description" : "ID of the Domain Member Security Group (e.g., sg-7f16e910)",
            "Type"        : "String"
        },
        "VPC"                   : {
            "Description" : "ID of the VPC (e.g., vpc-0343606e)",
            "Type"        : "String"
        },
        "AppServerSubnet"       : {
            "Description" : "ID of the Subnet you want to provision the App Server into (e.g., subnet-a0246dcd)",
            "Type"        : "String"
        }
    },
    "Mappings"                 : {
        "AWSInstanceType2Arch" : {
            "m1.small" : {
                "Arch" : "64"
            },
            "m1.medium" : {
                "Arch" : "64"
            },
            "m1.large"  : {
                "Arch" : "64"
            },
            "m1.xlarge" : {
                "Arch" : "64"
            },
            "m2.xlarge" : {
                "Arch" : "64"
            },
            "m2.2xlarge" : {
                "Arch" : "64"
            },
            "m2.4xlarge" : {
                "Arch" : "64"
            },
            "c1.medium"  : {
                "Arch" : "64"
            },
            "c1.xlarge"  : {
                "Arch" : "64"
            }
        },
        "AWSRegionArch2AMI"    : {
            "us-east-1" : {
                "64" : "ami-814642e8"
            },
            "eu-west-1" : {
                "64" : "ami-4eb74739"
            },
            "ap-northeast-1" : {
                "64" : "ami-7d681d7c"
            },
            "us-west-1"      : {
                "64" : "ami-2a80bd6f"
            },
            "us-west-2"      : {
                "64" : "ami-bc92f08c"
            },
            "ap-southeast-1" : {
                "64" : "ami-9ef4a2cc"
            },
            "ap-southeast-2" : {
                "64" : "ami-2b23bd11"
            },
            "sa-east-1"      : {
                "64" : "ami-85f55698"
            }
        }
    },
    "Resources"                : {
        "AppServerWaitCondition" : {
            "Type" : "AWS::CloudFormation::WaitCondition",
            "DependsOn" : "AppServer",
            "Properties" : {
                "Handle" : {
                    "Ref" : "AppServerWaitHandle"
                },
                "Timeout" : "3500"
            }
        },
        "AppServerWaitHandle"    : {
            "Type" : "AWS::CloudFormation::WaitConditionHandle"
        },
        "AppServer"              : {
            "Type" : "AWS::EC2::Instance",
            "Metadata" : {
                "AWS::CloudFormation::Init" : {
                    "configSets" : {
                        "config" : [
                            "CFNsetup",
                            "renameandjoin",
                            "finalize"
                        ]
                    },
                    "CFNsetup"   : {
                        "files" : {
                            "c:\\cfn\\cfn-hup.conf" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref" : "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref" : "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.AppServer.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -s ",
                                            {
                                                "Ref" : "AWS::StackId"
                                            },
                                            " -r AppServer",
                                            " --region ",
                                            {
                                                "Ref" : "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            }
                        },
                        "services" : {
                            "windows" : {
                                "cfn-hup" : {
                                    "enabled" : "true",
                                    "ensureRunning" : "true",
                                    "files"         : [
                                        "c:\\cfn\\cfn-hup.conf",
                                        "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "renameandjoin" : {
                        "files" : {
                            "C:\\cfn\\scripts\\RenameComputer.ps1" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "param ($name)",
                                            "\n",
                                            "Rename-Computer $name",
                                            "\n",
                                            "Restart-Computer"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\JoinComputer.ps1"   : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "$admin_pwd = convertto-securestring ",
                                            {
                                                "Ref" : "DomainAdminPassword"
                                            },
                                            " -asplaintext -force ",
                                            "\n",
                                            "$admincreds = New-Object System.Management.Automation.PSCredential (\"",
                                            {
                                                "Ref" : "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref" : "DomainAdminUser"
                                            },
                                            "\"",
                                            ",$admin_pwd)",
                                            "\n",
                                            "Set-DnsClientServerAddress -InterfaceAlias \"Ethernet\" -ServerAddresses (\"",
                                            {
                                                "Ref" : "ADServer1PrivateIp"
                                            },
                                            "\",\"",
                                            {
                                                "Ref" : "ADServer2PrivateIp"
                                            },
                                            "\")",
                                            "\n",
                                            "Add-Computer -Credential $admincreds -DomainName ",
                                            {
                                                "Ref" : "DomainDNSName"
                                            },
                                            "\n",
                                            "Restart-Computer",
                                            "\n"
                                        ]
                                    ]
                                }
                            }
                        },
                        "commands" : {
                            "1-execute-powershell-script-RenameComputer" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " C:\\cfn\\scripts\\RenameComputer.ps1 ",
                                            {
                                                "Ref" : "AppServerNetBIOSName"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "forever"
                            },
                            "2-execute-powershell-script-JoinComputer"   : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " C:\\cfn\\scripts\\JoinComputer.ps1"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "forever"
                            }
                        }
                    },
                    "finalize"      : {
                        "files" : {
                            "C:\\cfn\\scripts\\DownloadBlasterApp.ps1" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "$zipfilename = \"C:\\cfn\\scripts\\SQLBlaster_Demo.zip\"",
                                            "\n",
                                            "$destination = \"C:\\Users\\Default\\Desktop\"",
                                            "\n",
                                            "import-module BitsTransfer ",
                                            "\n",
                                            "Start-BitsTransfer ",
                                            "-Source https://wsfc-cfn-useast.s3.amazonaws.com/SQLBlaster_Demo.zip -Destination \"$zipfilename\"",
                                            "\n",
                                            "if(test-path($zipfilename))",
                                            "\n",
                                            "{",
                                            "\n",
                                            "[Reflection.Assembly]::LoadWithPartialName( \"System.IO.Compression.FileSystem\" )",
                                            "\n",
                                            "[System.IO.Compression.ZipFile]::ExtractToDirectory($zipfilename, $destination)",
                                            "\n",
                                            "}",
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\AddUserToGroup.ps1"     : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "Param(",
                                            "\n",
                                            "[Parameter(Mandatory=$True)]",
                                            "\n",
                                            "[string]$ServerName,",
                                            "\n",
                                            "[Parameter(Mandatory=$True)]",
                                            "\n",
                                            "[string]$GroupName,",
                                            "\n",
                                            "[Parameter(Mandatory=$True)]",
                                            "\n",
                                            "[string]$DomainNetBIOSName,",
                                            "\n",
                                            "[Parameter(Mandatory=$True)]",
                                            "\n",
                                            "[string]$UserName",
                                            "\n",
                                            ")",
                                            "$de = [ADSI]\"WinNT://$ServerName/$GroupName,group\"",
                                            "\n",
                                            "$de.psbase.Invoke(\"Add\",([ADSI]\"WinNT://$DomainNetBIOSName/$UserName\").path)",
                                            "\n"
                                        ]
                                    ]
                                }
                            }
                        },
                        "commands" : {
                            "1-execute-powershell-script-DownloadBlasterApp" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " C:\\cfn\\scripts\\DownloadBlasterApp.ps1"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "2-execute-powershell-script-AddUserToGroup"     : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " C:\\cfn\\scripts\\AddUserToGroup.ps1 -UserName ",
                                            {
                                                "Ref" : "DomainAdminUser"
                                            },
                                            " -ServerName ",
                                            {
                                                "Ref" : "AppServerNetBIOSName"
                                            },
                                            " -DomainNetBIOSName ",
                                            {
                                                "Ref" : "DomainNetBIOSName"
                                            },
                                            " -GroupName \"Administrators\"",
                                            "\n"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "3-signal-success"                               : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "cfn-signal.exe -e 0 \"",
                                            {
                                                "Ref" : "AppServerWaitHandle"
                                            },
                                            "\""
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties" : {
                "ImageId" : {
                    "Fn::FindInMap" : [
                        "AWSRegionArch2AMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        {
                            "Fn::FindInMap" : [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref" : "AppServerInstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType" : {
                    "Ref" : "AppServerInstanceType"
                },
                "SubnetId"     : {
                    "Ref" : "AppServerSubnet"
                },
                "EbsOptimized" : "true",
                "Tags"         : [
                    {
                        "Key" : "Name",
                        "Value" : {
                            "Ref" : "AppServerNetBIOSName"
                        }
                    }
                ],
                "BlockDeviceMappings" : [
                    {
                        "DeviceName" : "/dev/sda1",
                        "Ebs"        : {
                            "VolumeSize" : "100"
                        }
                    }
                ],
                "SecurityGroupIds"    : [
                    {
                        "Ref" : "DomainMemberSGID"
                    }
                ],
                "KeyName"             : {
                    "Ref" : "KeyPairName"
                },
                "UserData"            : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref" : "AWS::StackId"
                                },
                                " -r AppServer ",
                                " --region ",
                                {
                                    "Ref" : "AWS::Region"
                                },
                                "\n",
                                "</script>"
                            ]
                        ]
                    }
                }
            }
        }
    },
    "Outputs"                  : {
        "DomainAdmin" : {
            "Value" : {
                "Fn::Join" : [
                    "",
                    [
                        {
                            "Ref" : "DomainNetBIOSName"
                        },
                        "\\",
                        {
                            "Ref" : "DomainAdminUser"
                        }
                    ]
                ]
            },
            "Description" : "Domain administrator account"
        },
        "LocalAdmin"  : {
            "Value" : "Administrator",
            "Description" : "Please retrieve Administrator password of the instance"
        },
        "AppServerNetBIOSName" : {
            "Value" : {
                "Ref" : "AppServerNetBIOSName"
            },
            "Description" : "NetBIOS name of the App Server"
        }
    }
}