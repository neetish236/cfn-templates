{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description"              : "**Version 1.2** STEP-1 This template creates a VPC infrastructure for a multi-AZ, multi-tier deployment of a Windows based Application infrstructure. It installs 2 Active Directory Domain Controllers into subnets in seperate AZs inside a VPC, as well as Remote Desktop Gateway and NAT instances into the DMZ for each Availability Zone. The default Domain Administrator password will be the one retrieved from the instance.  For adding members to the domain, ensure that they are launched into the domain member security group created by this template and then configure them to use the AD instances fixed private IP addresses as the DNS server. **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
    "Parameters"               : {
        "KeyPairName" : {
            "Description" : "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type"        : "String"
        },
        "ADInstanceType" : {
            "Description" : "Amazon EC2 instance type for the first Active Directory Instance",
            "Type"        : "String",
            "Default"     : "m1.xlarge",
            "AllowedValues" : [
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "c1.medium",
                "c1.xlarge"
            ]
        },
        "AD2InstanceType" : {
            "Description" : "Amazon EC2 instance type for the second Active Directory Instance",
            "Type"        : "String",
            "Default"     : "m1.xlarge",
            "AllowedValues" : [
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "c1.medium",
                "c1.xlarge"
            ]
        },
        "NATInstanceType" : {
            "Description" : "Amazon EC2 instance type for the NAT Instances",
            "Type"        : "String",
            "Default"     : "m1.small",
            "AllowedValues" : [
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge"
            ]
        },
        "RDGWInstanceType" : {
            "Description" : "Amazon EC2 instance type for the Remote Desktop Gatweway Instance",
            "Type"        : "String",
            "Default"     : "m1.large",
            "AllowedValues" : [
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "c1.medium",
                "c1.xlarge"
            ]
        },
        "DomainDNSName"    : {
            "Description" : "Fully qualified domain name (FQDN) of the forest root domain e.g. corp.example.com",
            "Type"        : "String",
            "Default"     : "contoso.com",
            "MinLength"   : "3",
            "MaxLength"   : "25",
            "AllowedPattern" : "[a-zA-Z0-9]+\\..+"
        },
        "DomainNetBIOSName" : {
            "Description" : "NetBIOS name of the domain (upto 15 characters) for users of earlier versions of Windows e.g. CORP",
            "Type"        : "String",
            "Default"     : "contoso",
            "MinLength"   : "1",
            "MaxLength"   : "15",
            "AllowedPattern" : "[a-zA-Z0-9]+"
        },
        "ServerNetBIOSName1" : {
            "Description" : "NetBIOS name of the 1st AD Server (upto 15 characters)",
            "Type"        : "String",
            "Default"     : "DC1",
            "MinLength"   : "1",
            "MaxLength"   : "15",
            "AllowedPattern" : "[a-zA-Z0-9]+"
        },
        "ServerNetBIOSName2" : {
            "Description" : "NetBIOS name of the 2nd AD Server (upto 15 characters)",
            "Type"        : "String",
            "Default"     : "DC2",
            "MinLength"   : "1",
            "MaxLength"   : "15",
            "AllowedPattern" : "[a-zA-Z0-9]+"
        },
        "RestoreModePassword" : {
            "Description" : "Password for a separate Administrator account when the domain controller is in Restore Mode. Must be at least 8 characters containing letters, numbers and symbols",
            "Type"        : "String",
            "MinLength"   : "8",
            "MaxLength"   : "32",
            "AllowedPattern" : "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "NoEcho"         : "True",
            "Default"        : "Password123"
        },
        "DomainAdminUser"     : {
            "Description" : "User name for the account that will be added as Domain Administrator. This is separate from the default \"Administrator\" account",
            "Type"        : "String",
            "Default"     : "StackAdmin",
            "MinLength"   : "5",
            "MaxLength"   : "25",
            "AllowedPattern" : "[a-zA-Z0-9]*"
        },
        "DomainAdminPassword" : {
            "Description" : "Password for the domain admin user. Must be at least 8 characters containing letters, numbers and symbols",
            "Type"        : "String",
            "MinLength"   : "8",
            "MaxLength"   : "32",
            "AllowedPattern" : "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "NoEcho"         : "true",
            "Default"        : "Password123"
        },
        "SPSAdminUser"        : {
            "Description" : "User name for the SharePoint Server Admin Account. This Account is a Domain User and will also be added to the SQL DB as a member of the dbcreator role.",
            "Type"        : "String",
            "Default"     : "SPFarmAdmin",
            "MinLength"   : "5",
            "MaxLength"   : "25",
            "AllowedPattern" : "[a-zA-Z0-9]*"
        },
        "SPSAdminPassword"    : {
            "Description" : "Password for the SPS admin user. Must be at least 8 characters containing letters, numbers and symbols",
            "Type"        : "String",
            "MinLength"   : "8",
            "MaxLength"   : "32",
            "AllowedPattern" : "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "NoEcho"         : "true",
            "Default"        : "Password123"
        },
        "UserCSVSourceLocation" : {
            "Description" : "An accessible source location of a Comma Delimited Values (.CSV) file containing any users SamAccountName and the Name you may want to pre-provisioned Active Directory with. e.g. https://s3.amazonaws.com/.../UserImport.csv",
            "Type"        : "String",
            "Default"     : "https://s3.amazonaws.com/CFN_Templates/UserImport.csv",
            "AllowedPattern" : "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*"
        },
        "AZ1"                   : {
            "Description" : "Name of Availabilty Zone that will contain public & private subnets - Select a valid Zone for your region",
            "Type"        : "String",
            "Default"     : "us-east-1a",
            "AllowedValues" : [
                "eu-west-1a",
                "eu-west-1b",
                "eu-west-1c",
                "us-east-1a",
                "us-east-1b",
                "us-east-1c",
                "us-east-1d",
                "us-west-1a",
                "us-west-1b",
                "ap-southeast-1a",
                "ap-southeast-1b",
                "ap-northeast-1a",
                "ap-northeast-1b",
                "ap-northeast-1c",
                "us-west-2a",
                "us-west-2b",
                "us-west-2c",
                "sa-east-1a",
                "sa-east-1b"
            ],
            "ConstraintDescription" : "Must be a valid EC2 Availabilty zone for region being deployed to. Only supports eu-west-1 ,us-east-1 & us-west-1 etc <- You can customize if you define a constraint"
        },
        "AZ2"                   : {
            "Description" : "Name of Availabilty Zone that will contain public & private subnets - Select a valid Zone for your region",
            "Type"        : "String",
            "Default"     : "us-east-1b",
            "AllowedValues" : [
                "eu-west-1a",
                "eu-west-1b",
                "eu-west-1c",
                "us-east-1a",
                "us-east-1b",
                "us-east-1c",
                "us-east-1d",
                "us-west-1a",
                "us-west-1b",
                "ap-southeast-1a",
                "ap-southeast-1b",
                "ap-northeast-1a",
                "ap-northeast-1b",
                "ap-northeast-1c",
                "us-west-2a",
                "us-west-2b",
                "us-west-2c",
                "sa-east-1a",
                "sa-east-1b"
            ],
            "ConstraintDescription" : "Must be a valid EC2 Availabilty zone for region being deployed to. Only supports eu-west-1 ,us-east-1 & us-west-1 etc <- You can customize if you define a constraint"
        },
        "DMZ1CIDR"              : {
            "Description" : "CIDR Block for the Public DMZ Subnet located in AZ1",
            "Type"        : "String",
            "Default"     : "10.0.9.0/24",
            "AllowedPattern" : "[a-zA-Z0-9]+\\..+"
        },
        "DMZ2CIDR"              : {
            "Description" : "CIDR Block for the Public DMZ Subnet located in AZ2",
            "Type"        : "String",
            "Default"     : "10.0.10.0/24",
            "AllowedPattern" : "[a-zA-Z0-9]+\\..+"
        },
        "PrivSub1CIDR"          : {
            "Description" : "CIDR Block for Privat Subnet 1 located in AZ1",
            "Type"        : "String",
            "Default"     : "10.0.1.0/24",
            "AllowedPattern" : "[a-zA-Z0-9]+\\..+"
        },
        "PrivSub2CIDR"          : {
            "Description" : "CIDR Block for Private Subnet 2 located in AZ1",
            "Type"        : "String",
            "Default"     : "10.0.2.0/24",
            "AllowedPattern" : "[a-zA-Z0-9]+\\..+"
        },
        "PrivSub3CIDR"          : {
            "Description" : "CIDR Block for Private Subnet 3 located in AZ1",
            "Type"        : "String",
            "Default"     : "10.0.3.0/24",
            "AllowedPattern" : "[a-zA-Z0-9]+\\..+"
        },
        "PrivSub4CIDR"          : {
            "Description" : "CIDR Block for Private Subnet 4 located in AZ1",
            "Type"        : "String",
            "Default"     : "10.0.4.0/24",
            "AllowedPattern" : "[a-zA-Z0-9]+\\..+"
        },
        "PrivSub5CIDR"          : {
            "Description" : "CIDR Block for Private Subnet 5 located in AZ2",
            "Type"        : "String",
            "Default"     : "10.0.5.0/24",
            "AllowedPattern" : "[a-zA-Z0-9]+\\..+"
        },
        "PrivSub6CIDR"          : {
            "Description" : "CIDR Block for Private Subnet 6 located in AZ2",
            "Type"        : "String",
            "Default"     : "10.0.6.0/24",
            "AllowedPattern" : "[a-zA-Z0-9]+\\..+"
        },
        "PrivSub7CIDR"          : {
            "Description" : "CIDR Block for Private Subnet 7 located in AZ2",
            "Type"        : "String",
            "Default"     : "10.0.7.0/24",
            "AllowedPattern" : "[a-zA-Z0-9]+\\..+"
        },
        "PrivSub8CIDR"          : {
            "Description" : "CIDR Block for Private Subnet 8 located in AZ2",
            "Type"        : "String",
            "Default"     : "10.0.8.0/24",
            "AllowedPattern" : "[a-zA-Z0-9]+\\..+"
        },
        "VPCCIDR"               : {
            "Description" : "CIDR Block for the VPC",
            "Type"        : "String",
            "Default"     : "10.0.0.0/16",
            "AllowedPattern" : "[a-zA-Z0-9]+\\..+"
        },
        "AD1PrivateIp"          : {
            "Description" : "Fixed private IP for the first Active Directory server located in AZ1",
            "Type"        : "String",
            "Default"     : "10.0.1.10"
        },
        "AD2PrivateIp"          : {
            "Description" : "Fixed private IP for the second Active Directory serverr located in AZ2",
            "Type"        : "String",
            "Default"     : "10.0.5.10"
        }
    },
    "Mappings"                 : {
        "AWSInstanceType2Arch" : {
            "m1.small" : {
                "Arch" : "64"
            },
            "m1.medium" : {
                "Arch" : "64"
            },
            "m1.large"  : {
                "Arch" : "64"
            },
            "m1.xlarge" : {
                "Arch" : "64"
            },
            "m2.xlarge" : {
                "Arch" : "64"
            },
            "m2.2xlarge" : {
                "Arch" : "64"
            },
            "m2.4xlarge" : {
                "Arch" : "64"
            },
            "c1.medium"  : {
                "Arch" : "64"
            },
            "c1.xlarge"  : {
                "Arch" : "64"
            }
        },
        "AWSRegionArch2AMI"    : {
            "us-east-1" : {
                "64" : "ami-37b1b45e"
            },
            "eu-west-1" : {
                "64" : "ami-a2b242d5"
            },
            "ap-northeast-1" : {
                "64" : "ami-6b6c196a"
            },
            "us-west-1"      : {
                "64" : "ami-c287ba87"
            },
            "us-west-2"      : {
                "64" : "ami-208be910"
            },
            "ap-southeast-1" : {
                "64" : "ami-4cf7a11e"
            },
            "ap-southeast-2" : {
                "64" : "ami-1922bc23"
            },
            "sa-east-1"      : {
                "64" : "ami-85f65598"
            }
        },
        "AWSRegionArchNatAMI"  : {
            "us-east-1" : {
                "64" : "ami-f619c29f"
            },
            "us-west-2" : {
                "64" : "ami-52ff7262"
            },
            "us-west-1" : {
                "64" : "ami-3bcc9e7e"
            },
            "eu-west-1" : {
                "64" : "ami-e5e2d991"
            },
            "ap-southeast-1" : {
                "64" : "ami-02eb9350"
            },
            "ap-northeast-1" : {
                "64" : "ami-02eb9350"
            },
            "sa-east-1"      : {
                "64" : "ami-0039e61d"
            },
            "us-gov-west-1"  : {
                "64" : "ami-ff5a3edc"
            }
        }
    },
    "Resources"                : {
        "IAMUser" : {
            "Type" : "AWS::IAM::User",
            "Properties" : {
                "Path" : "/",
                "Policies" : [
                    {
                        "PolicyName" : "root",
                        "PolicyDocument" : {
                            "Statement" : [
                                {
                                    "Effect" : "Allow",
                                    "Action" : "CloudFormation:DescribeStackResource",
                                    "Resource" : "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "IAMUserAccessKey" : {
            "Type" : "AWS::IAM::AccessKey",
            "Properties" : {
                "UserName" : {
                    "Ref" : "IAMUser"
                }
            }
        },
        "ContosoDhcpOptions" : {
            "Type" : "AWS::EC2::DHCPOptions",
            "Properties" : {
                "DomainName" : {
                    "Ref" : "DomainDNSName"
                },
                "DomainNameServers" : [
                    "AmazonProvidedDNS"
                ],
                "NtpServers"        : [
                    {
                        "Ref" : "AD1PrivateIp"
                    }
                ],
                "NetbiosNameServers" : [
                    {
                        "Ref" : "AD1PrivateIp"
                    },
                    {
                        "Ref" : "AD2PrivateIp"
                    }
                ],
                "NetbiosNodeType"    : "2",
                "Tags"               : [
                    {
                        "Key" : "Domain",
                        "Value" : {
                            "Ref" : "DomainDNSName"
                        }
                    }
                ]
            }
        },
        "VPC"                : {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
                "CidrBlock" : {
                    "Ref" : "VPCCIDR"
                },
                "Tags"      : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "Public"
                    }
                ]
            }
        },
        "ContosoVPCDHCPOptionsAssociation" : {
            "Type" : "AWS::EC2::VPCDHCPOptionsAssociation",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "DhcpOptionsId" : {
                    "Ref" : "ContosoDhcpOptions"
                }
            }
        },
        "DMZSubnet"                        : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "CidrBlock" : {
                    "Ref" : "DMZ1CIDR"
                },
                "AvailabilityZone" : {
                    "Ref" : "AZ1"
                },
                "Tags"             : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "Public"
                    },
                    {
                        "Key" : "Role",
                        "Value" : "DMZ 1 Subnet"
                    }
                ]
            }
        },
        "DMZ2Subnet"                       : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "CidrBlock" : {
                    "Ref" : "DMZ2CIDR"
                },
                "AvailabilityZone" : {
                    "Ref" : "AZ2"
                },
                "Tags"             : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "Public"
                    },
                    {
                        "Key" : "Role",
                        "Value" : "DMZ 2 Subnet"
                    }
                ]
            }
        },
        "PrivateSubnet1"                   : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "CidrBlock" : {
                    "Ref" : "PrivSub1CIDR"
                },
                "AvailabilityZone" : {
                    "Ref" : "AZ1"
                },
                "Tags"             : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "Private"
                    },
                    {
                        "Key" : "Role",
                        "Value" : "AD1 Subnet"
                    }
                ]
            }
        },
        "PrivateSubnet2"                   : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "CidrBlock" : {
                    "Ref" : "PrivSub2CIDR"
                },
                "AvailabilityZone" : {
                    "Ref" : "AZ1"
                },
                "Tags"             : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "Private"
                    },
                    {
                        "Key" : "Role",
                        "Value" : "DB1 Subnet"
                    }
                ]
            }
        },
        "PrivateSubnet3"                   : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "CidrBlock" : {
                    "Ref" : "PrivSub3CIDR"
                },
                "AvailabilityZone" : {
                    "Ref" : "AZ1"
                },
                "Tags"             : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "Private"
                    },
                    {
                        "Key" : "Role",
                        "Value" : "APPSVR1 Subnet"
                    }
                ]
            }
        },
        "PrivateSubnet4"                   : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "CidrBlock" : {
                    "Ref" : "PrivSub4CIDR"
                },
                "AvailabilityZone" : {
                    "Ref" : "AZ1"
                },
                "Tags"             : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "Private"
                    },
                    {
                        "Key" : "Role",
                        "Value" : "WebSVR1 Subnet"
                    }
                ]
            }
        },
        "PrivateSubnet5"                   : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "CidrBlock" : {
                    "Ref" : "PrivSub5CIDR"
                },
                "AvailabilityZone" : {
                    "Ref" : "AZ2"
                },
                "Tags"             : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "Private"
                    },
                    {
                        "Key" : "Role",
                        "Value" : "AD2 Subnet"
                    }
                ]
            }
        },
        "PrivateSubnet6"                   : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "CidrBlock" : {
                    "Ref" : "PrivSub6CIDR"
                },
                "AvailabilityZone" : {
                    "Ref" : "AZ2"
                },
                "Tags"             : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "Private"
                    },
                    {
                        "Key" : "Role",
                        "Value" : "DB2 Subnet"
                    }
                ]
            }
        },
        "PrivateSubnet7"                   : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "CidrBlock" : {
                    "Ref" : "PrivSub7CIDR"
                },
                "AvailabilityZone" : {
                    "Ref" : "AZ2"
                },
                "Tags"             : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "Private"
                    },
                    {
                        "Key" : "Role",
                        "Value" : "APPSVR2 Subnet"
                    }
                ]
            }
        },
        "PrivateSubnet8"                   : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "CidrBlock" : {
                    "Ref" : "PrivSub8CIDR"
                },
                "AvailabilityZone" : {
                    "Ref" : "AZ2"
                },
                "Tags"             : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "Private"
                    },
                    {
                        "Key" : "Role",
                        "Value" : "WebSVR2 Subnet"
                    }
                ]
            }
        },
        "InternetGateway"                  : {
            "Type" : "AWS::EC2::InternetGateway",
            "Properties" : {
                "Tags" : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "Public"
                    }
                ]
            }
        },
        "AttachGateway"                    : {
            "Type" : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "InternetGatewayId" : {
                    "Ref" : "InternetGateway"
                }
            }
        },
        "DMZRouteTable"                    : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "Tags"  : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "DMZ"
                    }
                ]
            }
        },
        "DMZRoute"                         : {
            "Type" : "AWS::EC2::Route",
            "Properties" : {
                "RouteTableId" : {
                    "Ref" : "DMZRouteTable"
                },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId"            : {
                    "Ref" : "InternetGateway"
                }
            }
        },
        "DMZ1SubnetRouteTableAssociation"  : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "DMZSubnet"
                },
                "RouteTableId" : {
                    "Ref" : "DMZRouteTable"
                }
            }
        },
        "DMZ2SubnetRouteTableAssociation"  : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "DMZ2Subnet"
                },
                "RouteTableId" : {
                    "Ref" : "DMZRouteTable"
                }
            }
        },
        "PrivateRouteTable"                : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "Tags"  : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "AZ1 Private"
                    }
                ]
            }
        },
        "PrivateRoute"                     : {
            "Type" : "AWS::EC2::Route",
            "Properties" : {
                "RouteTableId" : {
                    "Ref" : "PrivateRouteTable"
                },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "InstanceId"           : {
                    "Ref" : "NAT1"
                }
            }
        },
        "PrivateRouteTable2"               : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "Tags"  : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackName"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "AZ2 Private"
                    }
                ]
            }
        },
        "PrivateRoute2"                    : {
            "Type" : "AWS::EC2::Route",
            "Properties" : {
                "RouteTableId" : {
                    "Ref" : "PrivateRouteTable2"
                },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "InstanceId"           : {
                    "Ref" : "NAT2"
                }
            }
        },
        "PrivateSubnetRouteTableAssociation1" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "PrivateSubnet1"
                },
                "RouteTableId" : {
                    "Ref" : "PrivateRouteTable"
                }
            }
        },
        "PrivateSubnetRouteTableAssociation2" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "PrivateSubnet2"
                },
                "RouteTableId" : {
                    "Ref" : "PrivateRouteTable"
                }
            }
        },
        "PrivateSubnetRouteTableAssociation3" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "PrivateSubnet3"
                },
                "RouteTableId" : {
                    "Ref" : "PrivateRouteTable"
                }
            }
        },
        "PrivateSubnetRouteTableAssociation4" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "PrivateSubnet4"
                },
                "RouteTableId" : {
                    "Ref" : "PrivateRouteTable"
                }
            }
        },
        "PrivateSubnetRouteTableAssociation5" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "PrivateSubnet5"
                },
                "RouteTableId" : {
                    "Ref" : "PrivateRouteTable2"
                }
            }
        },
        "PrivateSubnetRouteTableAssociation6" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "PrivateSubnet6"
                },
                "RouteTableId" : {
                    "Ref" : "PrivateRouteTable2"
                }
            }
        },
        "PrivateSubnetRouteTableAssociation7" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "PrivateSubnet7"
                },
                "RouteTableId" : {
                    "Ref" : "PrivateRouteTable2"
                }
            }
        },
        "PrivateSubnetRouteTableAssociation8" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "PrivateSubnet8"
                },
                "RouteTableId" : {
                    "Ref" : "PrivateRouteTable2"
                }
            }
        },
        "RdgwEIP"                             : {
            "Type" : "AWS::EC2::EIP",
            "Properties" : {
                "Domain" : "vpc",
                "InstanceId" : {
                    "Ref" : "RDGateway"
                }
            }
        },
        "NAT1EIP"                             : {
            "Type" : "AWS::EC2::EIP",
            "Properties" : {
                "Domain" : "vpc",
                "InstanceId" : {
                    "Ref" : "NAT1"
                }
            }
        },
        "Rdgw2EIP"                            : {
            "Type" : "AWS::EC2::EIP",
            "Properties" : {
                "Domain" : "vpc",
                "InstanceId" : {
                    "Ref" : "RDGateway2"
                }
            }
        },
        "NAT2EIP"                             : {
            "Type" : "AWS::EC2::EIP",
            "Properties" : {
                "Domain" : "vpc",
                "InstanceId" : {
                    "Ref" : "NAT2"
                }
            }
        },
        "NAT1"                                : {
            "Type" : "AWS::EC2::Instance",
            "Properties" : {
                "ImageId" : {
                    "Fn::FindInMap" : [
                        "AWSRegionArchNatAMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        {
                            "Fn::FindInMap" : [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref" : "NATInstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType" : {
                    "Ref" : "NATInstanceType"
                },
                "SubnetId"     : {
                    "Ref" : "DMZSubnet"
                },
                "Tags"         : [
                    {
                        "Key" : "Name",
                        "Value" : "NAT1"
                    }
                ],
                "SecurityGroupIds" : [
                    {
                        "Ref" : "NAT1SecurityGroup"
                    }
                ],
                "KeyName"          : {
                    "Ref" : "KeyPairName"
                },
                "SourceDestCheck"  : "false"
            }
        },
        "NAT2"                                : {
            "Type" : "AWS::EC2::Instance",
            "DependsOn" : "NAT1",
            "Properties" : {
                "ImageId" : {
                    "Fn::FindInMap" : [
                        "AWSRegionArchNatAMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        {
                            "Fn::FindInMap" : [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref" : "NATInstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType" : {
                    "Ref" : "NATInstanceType"
                },
                "SubnetId"     : {
                    "Ref" : "DMZ2Subnet"
                },
                "Tags"         : [
                    {
                        "Key" : "Name",
                        "Value" : "NAT2"
                    }
                ],
                "SecurityGroupIds" : [
                    {
                        "Ref" : "NAT2SecurityGroup"
                    }
                ],
                "KeyName"          : {
                    "Ref" : "KeyPairName"
                },
                "SourceDestCheck"  : "false"
            }
        },
        "DomainController"                    : {
            "Type" : "AWS::EC2::Instance",
            "DependsOn" : "NAT2",
            "Metadata"  : {
                "AWS::CloudFormation::Init" : {
                    "configSets" : {
                        "config" : [
                            "setup",
                            "rename",
                            "dcpromo",
                            "createsite",
                            "finalize"
                        ]
                    },
                    "setup"      : {
                        "files" : {
                            "c:\\cfn\\cfn-credentials" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "AWSAccessKeyId=",
                                            {
                                                "Ref" : "IAMUserAccessKey"
                                            },
                                            "\n",
                                            "AWSSecretKey=",
                                            {
                                                "Fn::GetAtt" : [
                                                    "IAMUserAccessKey",
                                                    "SecretAccessKey"
                                                ]
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\cfn-hup.conf"    : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref" : "AWS::StackName"
                                            },
                                            "\n",
                                            "credential-file=c:\\cfn\\cfn-credentials\n",
                                            "region=",
                                            {
                                                "Ref" : "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.DomainController.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -s ",
                                            {
                                                "Ref" : "AWS::StackName"
                                            },
                                            " -r DomainController",
                                            " --credential-file c:\\cfn\\cfn-credentials",
                                            " --region ",
                                            {
                                                "Ref" : "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\CreateUsers.ps1"        : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "import-module ActiveDirectory ",
                                            "\n",
                                            "import-module BitsTransfer ",
                                            "\n",
                                            "Start-BitsTransfer ",
                                            "-Source ",
                                            {
                                                "Ref" : "UserCSVSourceLocation"
                                            },
                                            " -Destination c:\\cfn\\scripts\\UserImport.csv",
                                            "\n",
                                            " Import-CSV c:\\cfn\\scripts\\UserImport.csv",
                                            " | ",
                                            "foreach ",
                                            "{New-AdUser -SamAccountName $_.SamAccountName -Name $_.Name -AccountPassword (ConvertTo-SecureString ",
                                            "\"Password123$\" ",
                                            "-AsPlainText -Force) -Enabled $true -PasswordNeverExpires $true -Path ",
                                            "\"CN=Users,",
                                            "DC=",
                                            {
                                                "Ref" : "DomainNetBIOSName"
                                            },
                                            ",DC=Com\"}",
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\GetSiteCreationPS1File.ps1" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "import-module BitsTransfer ",
                                            "\n",
                                            "Start-BitsTransfer ",
                                            "-Source https://s3.amazonaws.com/CFN_Templates/Create-NewADSite_V2.ps1 -Destination c:\\cfn\\scripts\\Create-NewADSite.ps1",
                                            "\n",
                                            "Start-BitsTransfer ",
                                            "-Source https://s3.amazonaws.com/CFN_Templates/FinalizeAD.ps1 -Destination c:\\cfn\\scripts\\FinalizeAD.ps1",
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\RenameComputer.ps1"         : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "param ($name)",
                                            "\n",
                                            "$sysInfo = Get-WmiObject -Class Win32_ComputerSystem",
                                            "\n",
                                            "$sysInfo.Rename($name)",
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\PSISE.ps1"                  : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "import-module servermanager",
                                            "\n",
                                            "add-windowsfeature powershell-ise",
                                            "\n"
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "rename"     : {
                        "commands" : {
                            "1-execute-powershell-script-RenameComputer" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " C:\\cfn\\scripts\\RenameComputer.ps1 ",
                                            {
                                                "Ref" : "ServerNetBIOSName1"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "2-reboot"                                   : {
                                "command" : "shutdown -r -t 1"
                            }
                        }
                    },
                    "dcpromo"    : {
                        "files" : {
                            "C:\\cfn\\RunCommand.bat" : {
                                "content" : "%~1\nIF %ERRORLEVEL% GTR 10 ( exit /b 1 ) else ( exit /b 0 )"
                            },
                            "C:\\cfn\\scripts\\CreateUser.ps1" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "param ",
                                            "\n",
                                            "(",
                                            "\n",
                                            "[string] $UserName,",
                                            "\n",
                                            "[string] $AccountPassword,",
                                            "\n",
                                            "[string] $DomainDNSName",
                                            "\n",
                                            ")",
                                            "\n",
                                            "$account_pwd = convertto-securestring $AccountPassword -asplaintext -force ",
                                            "\n",
                                            "$DomainFQDN = $DomainDNSName.Split(\".\")",
                                            "\n",
                                            "$PathObject = $(\"CN=Users\")",
                                            "\n",
                                            "foreach ($DomainFQDNObject in $DomainFQDN)",
                                            "\n",
                                            "{",
                                            "$PathObject = $($PathObject + \",\")",
                                            "\n",
                                            "$PathObject = $($Pathobject + \"DC=\" + $DomainFQDNObject)",
                                            "\n",
                                            "}",
                                            "New-ADUser `",
                                            "\n",
                                            "-Name $UserName `",
                                            "\n",
                                            "-SamAccountName $UserName `",
                                            "\n",
                                            "-Path $PathObject `",
                                            "\n",
                                            "-AccountPassword $account_pwd `",
                                            "\n",
                                            "-PasswordNeverExpires $true `",
                                            "\n",
                                            "-Enabled $true"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\JoinGroup.ps1"  : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "param ",
                                            "\n",
                                            "(",
                                            "\n",
                                            "[string] $UserName,",
                                            "\n",
                                            "[string] $ServerName,",
                                            "\n",
                                            "[string] $DomainDNSName,",
                                            "\n",
                                            "[string] $GroupName",
                                            "\n",
                                            ")",
                                            "\n",
                                            "$DomainFQDN = $DomainDNSName.Split(\".\")",
                                            "\n",
                                            "$PathUserObject = $(\"CN=$UserName,CN=Users\")",
                                            "\n",
                                            "$PathGroupObject = $(\"CN=$GroupName,CN=Users\")",
                                            "\n",
                                            "foreach ($DomainFQDNObject in $DomainFQDN)",
                                            "\n",
                                            "{",
                                            "$PathUserObject = $($PathUserObject + \",\")",
                                            "\n",
                                            "$PathUserObject = $($PathUserObject + \"DC=\" + $DomainFQDNObject)",
                                            "\n",
                                            "$PathGroupObject = $($PathGroupObject + \",\")",
                                            "\n",
                                            "$PathGroupObject = $($PathGroupObject + \"DC=\" + $DomainFQDNObject)",
                                            "\n",
                                            "}",
                                            "$user = Get-ADUser $PathUserObject -Server \"$ServerName.$DomainDNSName\"",
                                            "\n",
                                            "$group = Get-ADGroup $PathGroupObject -Server \"$ServerName.$DomainDNSName\"",
                                            "\n",
                                            "Add-ADGroupMember `",
                                            "\n",
                                            "-Identity $group `",
                                            "\n",
                                            "-Member $user `",
                                            "\n",
                                            "-Server \"$ServerName.$DomainDNSName\""
                                        ]
                                    ]
                                }
                            }
                        },
                        "commands" : {
                            "1-run-dcpromo" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "C:\\cfn\\RunCommand.bat \"dcpromo /unattend  /ReplicaOrNewDomain:Domain  /NewDomain:Forest  /NewDomainDNSName:",
                                            {
                                                "Ref" : "DomainDNSName"
                                            },
                                            "  /ForestLevel:4 /DomainNetbiosName:",
                                            {
                                                "Ref" : "DomainNetBIOSName"
                                            },
                                            " /DomainLevel:4  /InstallDNS:Yes  /ConfirmGc:Yes  /CreateDNSDelegation:No  /DatabasePath:\"C:\\Windows\\NTDS\"  /LogPath:\"C:\\Windows\\NTDS\"  /SYSVOLPath:\"C:\\Windows\\SYSVOL\" /SafeModeAdminPassword=",
                                            {
                                                "Ref" : "RestoreModePassword"
                                            },
                                            " /RebootOnCompletion:Yes\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "forever"
                            },
                            "2-run-CreateAdminUser" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " C:\\cfn\\scripts\\CreateUser.ps1 -UserName ",
                                            {
                                                "Ref" : "DomainAdminUser"
                                            },
                                            " -AccountPassword ",
                                            {
                                                "Ref" : "DomainAdminPassword"
                                            },
                                            " -DomainDNSName ",
                                            {
                                                "Ref" : "DomainDNSName"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "3-run-CreateSPSUser"   : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " C:\\cfn\\scripts\\CreateUser.ps1 -UserName ",
                                            {
                                                "Ref" : "SPSAdminUser"
                                            },
                                            " -AccountPassword ",
                                            {
                                                "Ref" : "SPSAdminPassword"
                                            },
                                            " -DomainDNSName ",
                                            {
                                                "Ref" : "DomainDNSName"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "4-execute-powershell-script-CreateUsers" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " C:\\cfn\\scripts\\CreateUsers.ps1"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "5-run-JoinGroup"                         : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " C:\\cfn\\scripts\\JoinGroup.ps1 -UserName ",
                                            {
                                                "Ref" : "DomainAdminUser"
                                            },
                                            " -ServerName ",
                                            {
                                                "Ref" : "ServerNetBIOSName1"
                                            },
                                            " -DomainDNSName ",
                                            {
                                                "Ref" : "DomainDNSName"
                                            },
                                            " -GroupName 'Domain Admins'",
                                            "\n"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            }
                        }
                    },
                    "createsite" : {
                        "commands" : {
                            "1-execute-powershell-script-GetSiteCreationPS1File" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " C:\\cfn\\scripts\\GetSiteCreationPS1File.ps1"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "20-execute-powershell-script-Create-NewADSite"      : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " c:\\cfn\\scripts\\Create-NewADSite.ps1 -verbose -debug -newsitename ",
                                            {
                                                "Ref" : "AZ1"
                                            },
                                            " -subnetCIDR ",
                                            {
                                                "Ref" : "PrivSub1CIDR"
                                            },
                                            " -replicationsitename ",
                                            "\"Default-First-Site-Name\"",
                                            " -SubnetDescription \"DC_1_Subnet\"",
                                            " -SubnetLocation ",
                                            {
                                                "Ref" : "AZ1"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "21-execute-powershell-script-Create-NewADSite"      : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " c:\\cfn\\scripts\\Create-NewADSite.ps1 -verbose -debug -newsitename ",
                                            {
                                                "Ref" : "AZ1"
                                            },
                                            " -subnetCIDR ",
                                            {
                                                "Ref" : "PrivSub2CIDR"
                                            },
                                            " -replicationsitename ",
                                            "\"Default-First-Site-Name\"",
                                            " -SubnetDescription \"DB_1_Subnet\"",
                                            " -SubnetLocation ",
                                            {
                                                "Ref" : "AZ1"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "22-execute-powershell-script-Create-NewADSite"      : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " c:\\cfn\\scripts\\Create-NewADSite.ps1 -verbose -debug -newsitename ",
                                            {
                                                "Ref" : "AZ1"
                                            },
                                            " -subnetCIDR ",
                                            {
                                                "Ref" : "PrivSub3CIDR"
                                            },
                                            " -replicationsitename ",
                                            "\"Default-First-Site-Name\"",
                                            " -SubnetDescription \"AppSVR_1_Subnet\"",
                                            " -SubnetLocation ",
                                            {
                                                "Ref" : "AZ1"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "23-execute-powershell-script-Create-NewADSite"      : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " c:\\cfn\\scripts\\Create-NewADSite.ps1 -verbose -debug -newsitename ",
                                            {
                                                "Ref" : "AZ1"
                                            },
                                            " -subnetCIDR ",
                                            {
                                                "Ref" : "PrivSub4CIDR"
                                            },
                                            " -replicationsitename ",
                                            "\"Default-First-Site-Name\"",
                                            " -SubnetDescription \"WebSVR_1_Subnet\"",
                                            " -SubnetLocation ",
                                            {
                                                "Ref" : "AZ1"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "24-execute-powershell-script-Create-NewADSite"      : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " c:\\cfn\\scripts\\Create-NewADSite.ps1 -verbose -debug -newsitename ",
                                            {
                                                "Ref" : "AZ2"
                                            },
                                            " -subnetCIDR ",
                                            {
                                                "Ref" : "PrivSub5CIDR"
                                            },
                                            " -replicationsitename ",
                                            {
                                                "Ref" : "AZ1"
                                            },
                                            " -SubnetDescription \"DC_2_Subnet\"",
                                            " -SubnetLocation ",
                                            {
                                                "Ref" : "AZ2"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "25-execute-powershell-script-Create-NewADSite"      : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " c:\\cfn\\scripts\\Create-NewADSite.ps1 -verbose -debug -newsitename ",
                                            {
                                                "Ref" : "AZ2"
                                            },
                                            " -subnetCIDR ",
                                            {
                                                "Ref" : "PrivSub6CIDR"
                                            },
                                            " -replicationsitename ",
                                            {
                                                "Ref" : "AZ1"
                                            },
                                            " -SubnetDescription \"DB_2_Subnet\"",
                                            " -SubnetLocation ",
                                            {
                                                "Ref" : "AZ2"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "26-execute-powershell-script-Create-NewADSite"      : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " c:\\cfn\\scripts\\Create-NewADSite.ps1 -verbose -debug -newsitename ",
                                            {
                                                "Ref" : "AZ2"
                                            },
                                            " -subnetCIDR ",
                                            {
                                                "Ref" : "PrivSub7CIDR"
                                            },
                                            " -replicationsitename ",
                                            {
                                                "Ref" : "AZ1"
                                            },
                                            " -SubnetDescription \"AppSVR_2_Subnet\"",
                                            " -SubnetLocation ",
                                            {
                                                "Ref" : "AZ2"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "27-execute-powershell-script-Create-NewADSite"      : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " c:\\cfn\\scripts\\Create-NewADSite.ps1 -verbose -debug -newsitename ",
                                            {
                                                "Ref" : "AZ2"
                                            },
                                            " -subnetCIDR ",
                                            {
                                                "Ref" : "PrivSub8CIDR"
                                            },
                                            " -replicationsitename ",
                                            {
                                                "Ref" : "AZ1"
                                            },
                                            " -SubnetDescription \"WebSVR_2_Subnet\"",
                                            " -SubnetLocation ",
                                            {
                                                "Ref" : "AZ2"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "28-execute-powershell-script-Create-NewADSite"      : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " c:\\cfn\\scripts\\Create-NewADSite.ps1 -verbose -debug -newsitename ",
                                            {
                                                "Ref" : "AZ1"
                                            },
                                            " -subnetCIDR ",
                                            {
                                                "Ref" : "DMZ1CIDR"
                                            },
                                            " -replicationsitename ",
                                            "\"Default-First-Site-Name\"",
                                            " -SubnetDescription \"DMZ1_Subnet\"",
                                            " -SubnetLocation ",
                                            {
                                                "Ref" : "AZ1"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "29-execute-powershell-script-Create-NewADSite"      : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " c:\\cfn\\scripts\\Create-NewADSite.ps1 -verbose -debug -newsitename ",
                                            {
                                                "Ref" : "AZ2"
                                            },
                                            " -subnetCIDR ",
                                            {
                                                "Ref" : "DMZ2CIDR"
                                            },
                                            " -replicationsitename ",
                                            {
                                                "Ref" : "AZ1"
                                            },
                                            " -SubnetDescription \"DMZ2_Subnet\"",
                                            " -SubnetLocation ",
                                            {
                                                "Ref" : "AZ2"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            }
                        }
                    },
                    "finalize"   : {
                        "commands" : {
                            "1-execute-powershell-script-PSISE" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " C:\\cfn\\scripts\\PSISE.ps1"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "2-execute-powershell-script-FinalizeAD" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " c:\\cfn\\scripts\\FinalizeAD.ps1 -verbose -debug -newsitename ",
                                            {
                                                "Ref" : "AZ1"
                                            },
                                            " -replicationsitename ",
                                            {
                                                "Ref" : "AZ1"
                                            },
                                            " -ADNetbiosName ",
                                            {
                                                "Ref" : "ServerNetBIOSName1"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "3-signal-success"                       : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "cfn-signal.exe -e 0 \"",
                                            {
                                                "Ref" : "DomainControllerWaitHandle"
                                            },
                                            "\""
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties" : {
                "ImageId" : {
                    "Fn::FindInMap" : [
                        "AWSRegionArch2AMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        {
                            "Fn::FindInMap" : [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref" : "ADInstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType" : {
                    "Ref" : "ADInstanceType"
                },
                "SubnetId"     : {
                    "Ref" : "PrivateSubnet1"
                },
                "Tags"         : [
                    {
                        "Key" : "Name",
                        "Value" : {
                            "Ref" : "ServerNetBIOSName1"
                        }
                    }
                ],
                "SecurityGroupIds" : [
                    {
                        "Ref" : "FirstDomainControllerSG"
                    }
                ],
                "PrivateIpAddress" : {
                    "Ref" : "AD1PrivateIp"
                },
                "KeyName"          : {
                    "Ref" : "KeyPairName"
                },
                "UserData"         : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref" : "AWS::StackName"
                                },
                                " -r DomainController ",
                                " --access-key ",
                                {
                                    "Ref" : "IAMUserAccessKey"
                                },
                                " --secret-key ",
                                {
                                    "Fn::GetAtt" : [
                                        "IAMUserAccessKey",
                                        "SecretAccessKey"
                                    ]
                                },
                                " --region ",
                                {
                                    "Ref" : "AWS::Region"
                                },
                                "\n",
                                "SCHTASKS /Create /SC MINUTE /MO 10 /TN cfn-hup /RU SYSTEM /TR \"cfn-hup.exe -v --no-daemon\"",
                                "\n",
                                "</script>"
                            ]
                        ]
                    }
                }
            }
        },
        "DomainController2"                   : {
            "Type" : "AWS::EC2::Instance",
            "DependsOn" : "DomainControllerWaitCondition",
            "Metadata"  : {
                "AWS::CloudFormation::Init" : {
                    "configSets" : {
                        "config" : [
                            "setup",
                            "rename",
                            "join",
                            "dcpromo",
                            "finalize"
                        ]
                    },
                    "setup"      : {
                        "files" : {
                            "c:\\cfn\\cfn-credentials" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "AWSAccessKeyId=",
                                            {
                                                "Ref" : "IAMUserAccessKey"
                                            },
                                            "\n",
                                            "AWSSecretKey=",
                                            {
                                                "Fn::GetAtt" : [
                                                    "IAMUserAccessKey",
                                                    "SecretAccessKey"
                                                ]
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\cfn-hup.conf"    : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref" : "AWS::StackName"
                                            },
                                            "\n",
                                            "credential-file=c:\\cfn\\cfn-credentials\n",
                                            "region=",
                                            {
                                                "Ref" : "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.DomainController2.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -s ",
                                            {
                                                "Ref" : "AWS::StackName"
                                            },
                                            " -r DomainController2",
                                            " --credential-file c:\\cfn\\cfn-credentials",
                                            " --region ",
                                            {
                                                "Ref" : "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\RunCommand.bat"                 : {
                                "content" : "%~1\nIF %ERRORLEVEL% GTR 10 ( exit /b 1 ) else ( exit /b 0 )"
                            },
                            "c:\\cfn\\scripts\\SetDNSOnNIC.ps1"        : {
                                "content" : {
                                    "Fn::Join" : [
                                        "\n",
                                        [
                                            "param($Gateway1)",
                                            "$NICs = Get-WMIObject Win32_NetworkAdapterConfiguration | where{$_.IPEnabled -eq \"TRUE\"}",
                                            "\n",
                                            "Foreach($NIC in $NICs) {$DNSServers = \"$Gateway1\"",
                                            "\n",
                                            "$NIC.SetDNSServerSearchOrder($DNSServers)",
                                            "\n",
                                            "$NIC.SetDynamicDNSRegistration(\"TRUE\")}",
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\RenameComputer.ps1"     : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "param ($name)",
                                            "\n",
                                            "$sysInfo = Get-WmiObject -Class Win32_ComputerSystem",
                                            "\n",
                                            "$sysInfo.Rename($name)",
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\PSISE.ps1"              : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "import-module servermanager",
                                            "\n",
                                            "add-windowsfeature powershell-ise",
                                            "\n"
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "rename"     : {
                        "commands" : {
                            "1-execute-powershell-script-RenameComputer" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " C:\\cfn\\scripts\\RenameComputer.ps1 ",
                                            {
                                                "Ref" : "ServerNetBIOSName2"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "2-reboot"                                   : {
                                "command" : "shutdown -r -t 1"
                            }
                        }
                    },
                    "join"       : {
                        "commands" : {
                            "1-set-dns-on-nic" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " c:\\cfn\\scripts\\SetDNSOnNIC.ps1 ",
                                            {
                                                "Ref" : "AD1PrivateIp"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "2-join-domain"    : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "NETDOM join localhost /Domain:",
                                            {
                                                "Ref" : "DomainDNSName"
                                            },
                                            " /userd:",
                                            {
                                                "Ref" : "DomainAdminUser"
                                            },
                                            " /passwordd:",
                                            {
                                                "Ref" : "DomainAdminPassword"
                                            },
                                            " /reboot"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "forever"
                            },
                            "3-add-local-admin" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "net localgroup \"Administrators\" \"",
                                            {
                                                "Ref" : "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref" : "DomainAdminUser"
                                            },
                                            "\" /add"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            }
                        }
                    },
                    "dcpromo"    : {
                        "commands" : {
                            "1-run-dcpromo-add-DC" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "C:\\cfn\\RunCommand.bat \"dcpromo /unattend  /ReplicaOrNewDomain:Replica",
                                            " /ReplicaDomainDNSName:",
                                            {
                                                "Ref" : "DomainDNSName"
                                            },
                                            " /UserName:",
                                            {
                                                "Ref" : "DomainAdminUser"
                                            },
                                            " /Password:",
                                            {
                                                "Ref" : "DomainAdminPassword"
                                            },
                                            "  /ForestLevel:4 /DomainNetbiosName:",
                                            {
                                                "Ref" : "DomainNetBIOSName"
                                            },
                                            " /DomainLevel:4  /InstallDNS:Yes  /ConfirmGc:Yes  /CreateDNSDelegation:No  /DatabasePath:\"C:\\Windows\\NTDS\"  /LogPath:\"C:\\Windows\\NTDS\"  /SYSVOLPath:\"C:\\Windows\\SYSVOL\" /SafeModeAdminPassword=",
                                            {
                                                "Ref" : "RestoreModePassword"
                                            },
                                            " /RebootOnCompletion:Yes\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "forever"
                            }
                        }
                    },
                    "finalize"   : {
                        "commands" : {
                            "1-execute-powershell-script-PSISE" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " C:\\cfn\\scripts\\PSISE.ps1"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "2-signal-success"                  : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "cfn-signal.exe -e 0 \"",
                                            {
                                                "Ref" : "DomainController2WaitHandle"
                                            },
                                            "\""
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties" : {
                "ImageId" : {
                    "Fn::FindInMap" : [
                        "AWSRegionArch2AMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        {
                            "Fn::FindInMap" : [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref" : "AD2InstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType" : {
                    "Ref" : "AD2InstanceType"
                },
                "SubnetId"     : {
                    "Ref" : "PrivateSubnet5"
                },
                "Tags"         : [
                    {
                        "Key" : "Name",
                        "Value" : {
                            "Ref" : "ServerNetBIOSName2"
                        }
                    }
                ],
                "SecurityGroupIds" : [
                    {
                        "Ref" : "SecondDomainControllerSG"
                    }
                ],
                "PrivateIpAddress" : {
                    "Ref" : "AD2PrivateIp"
                },
                "KeyName"          : {
                    "Ref" : "KeyPairName"
                },
                "UserData"         : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref" : "AWS::StackName"
                                },
                                " -r DomainController2 ",
                                " --access-key ",
                                {
                                    "Ref" : "IAMUserAccessKey"
                                },
                                " --secret-key ",
                                {
                                    "Fn::GetAtt" : [
                                        "IAMUserAccessKey",
                                        "SecretAccessKey"
                                    ]
                                },
                                " --region ",
                                {
                                    "Ref" : "AWS::Region"
                                },
                                "\n",
                                "SCHTASKS /Create /SC MINUTE /MO 10 /TN cfn-hup /RU SYSTEM /TR \"cfn-hup.exe -v --no-daemon\"",
                                "\n",
                                "</script>"
                            ]
                        ]
                    }
                }
            }
        },
        "RDGateway"                           : {
            "Type" : "AWS::EC2::Instance",
            "DependsOn" : "DomainController2",
            "Metadata"  : {
                "AWS::CloudFormation::Init" : {
                    "configSets" : {
                        "config" : [
                            "setup",
                            "rename",
                            "join",
                            "finalize"
                        ]
                    },
                    "setup"      : {
                        "files" : {
                            "c:\\cfn\\cfn-credentials" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "AWSAccessKeyId=",
                                            {
                                                "Ref" : "IAMUserAccessKey"
                                            },
                                            "\n",
                                            "AWSSecretKey=",
                                            {
                                                "Fn::GetAtt" : [
                                                    "IAMUserAccessKey",
                                                    "SecretAccessKey"
                                                ]
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\cfn-hup.conf"    : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref" : "AWS::StackName"
                                            },
                                            "\n",
                                            "credential-file=c:\\cfn\\cfn-credentials\n",
                                            "region=",
                                            {
                                                "Ref" : "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.RDGateway.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -s ",
                                            {
                                                "Ref" : "AWS::StackName"
                                            },
                                            " -r RDGateway",
                                            " --credential-file c:\\cfn\\cfn-credentials",
                                            " --region ",
                                            {
                                                "Ref" : "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\RunCommand.bat"                 : {
                                "content" : "%~1\nIF %ERRORLEVEL% GTR 10 ( exit /b 1 ) else ( exit /b 0 )"
                            },
                            "C:\\cfn\\scripts\\PSISE.ps1"              : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "import-module servermanager",
                                            "\n",
                                            "add-windowsfeature powershell-ise",
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\RDGW.ps1"               : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "import-module servermanager",
                                            "\n",
                                            "add-windowsfeature RDS-Gateway -IncludeAllSubFeature",
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\scripts\\SetDNSOnNIC.ps1"        : {
                                "content" : {
                                    "Fn::Join" : [
                                        "\n",
                                        [
                                            "param($Gateway1,$Gateway2)",
                                            "$NICs = Get-WMIObject Win32_NetworkAdapterConfiguration | where{$_.IPEnabled -eq \"TRUE\"}",
                                            "\n",
                                            "Foreach($NIC in $NICs) {$DNSServers = \"$Gateway1\",\"$Gateway2\"",
                                            "\n",
                                            "$NIC.SetDNSServerSearchOrder($DNSServers)",
                                            "\n",
                                            "$NIC.SetDynamicDNSRegistration(\"TRUE\")}",
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\RenameComputer.ps1"     : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "$sysInfo = Get-WmiObject -Class Win32_ComputerSystem",
                                            "\n",
                                            "$sysInfo.Rename(\"RDGW1\")",
                                            "\n"
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "rename"     : {
                        "commands" : {
                            "1-execute-powershell-script-RenameComputer" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " C:\\cfn\\scripts\\RenameComputer.ps1"
                                        ]
                                    ]
                                }
                            },
                            "2-reboot"                                   : {
                                "command" : "shutdown -r -t 1"
                            }
                        }
                    },
                    "join"       : {
                        "commands" : {
                            "1-set-dns-on-nic" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " c:\\cfn\\scripts\\SetDNSOnNIC.ps1 ",
                                            {
                                                "Ref" : "AD1PrivateIp"
                                            },
                                            " ",
                                            {
                                                "Ref" : "AD2PrivateIp"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "2-join-domain"    : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "NETDOM join localhost /Domain:",
                                            {
                                                "Ref" : "DomainDNSName"
                                            },
                                            " /userd:",
                                            {
                                                "Ref" : "DomainAdminUser"
                                            },
                                            " /passwordd:",
                                            {
                                                "Ref" : "DomainAdminPassword"
                                            },
                                            " /reboot"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "forever"
                            },
                            "3-add-local-admin" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "net localgroup \"Administrators\" \"",
                                            {
                                                "Ref" : "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref" : "DomainAdminUser"
                                            },
                                            "\" /add"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            }
                        }
                    },
                    "finalize"   : {
                        "commands" : {
                            "1-execute-powershell-script-PSISE" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " C:\\cfn\\scripts\\PSISE.ps1"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "2-execute-powershell-script-RDGW"  : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " C:\\cfn\\scripts\\RDGW.ps1"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "3-signal-success"                  : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "cfn-signal.exe -e 0 \"",
                                            {
                                                "Ref" : "RDGWWaitHandle"
                                            },
                                            "\""
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties" : {
                "ImageId" : {
                    "Fn::FindInMap" : [
                        "AWSRegionArch2AMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        {
                            "Fn::FindInMap" : [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref" : "AD2InstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType" : {
                    "Ref" : "RDGWInstanceType"
                },
                "SubnetId"     : {
                    "Ref" : "DMZSubnet"
                },
                "Tags"         : [
                    {
                        "Key" : "Name",
                        "Value" : "RDGW1"
                    }
                ],
                "SecurityGroupIds" : [
                    {
                        "Ref" : "RDGWSecurityGroup"
                    },
                    {
                        "Ref" : "DomainMemberSG"
                    }
                ],
                "KeyName"          : {
                    "Ref" : "KeyPairName"
                },
                "UserData"         : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref" : "AWS::StackName"
                                },
                                " -r RDGateway ",
                                " --access-key ",
                                {
                                    "Ref" : "IAMUserAccessKey"
                                },
                                " --secret-key ",
                                {
                                    "Fn::GetAtt" : [
                                        "IAMUserAccessKey",
                                        "SecretAccessKey"
                                    ]
                                },
                                " --region ",
                                {
                                    "Ref" : "AWS::Region"
                                },
                                "\n",
                                "SCHTASKS /Create /SC MINUTE /MO 10 /TN cfn-hup /RU SYSTEM /TR \"cfn-hup.exe -v --no-daemon\"",
                                "\n",
                                "</script>"
                            ]
                        ]
                    }
                }
            }
        },
        "RDGateway2"                          : {
            "Type" : "AWS::EC2::Instance",
            "DependsOn" : "DomainController2",
            "Metadata"  : {
                "AWS::CloudFormation::Init" : {
                    "configSets" : {
                        "config" : [
                            "setup",
                            "rename",
                            "join",
                            "finalize"
                        ]
                    },
                    "setup"      : {
                        "files" : {
                            "c:\\cfn\\cfn-credentials" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "AWSAccessKeyId=",
                                            {
                                                "Ref" : "IAMUserAccessKey"
                                            },
                                            "\n",
                                            "AWSSecretKey=",
                                            {
                                                "Fn::GetAtt" : [
                                                    "IAMUserAccessKey",
                                                    "SecretAccessKey"
                                                ]
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\cfn-hup.conf"    : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref" : "AWS::StackName"
                                            },
                                            "\n",
                                            "credential-file=c:\\cfn\\cfn-credentials\n",
                                            "region=",
                                            {
                                                "Ref" : "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.RDGateway2.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -s ",
                                            {
                                                "Ref" : "AWS::StackName"
                                            },
                                            " -r RDGateway2",
                                            " --credential-file c:\\cfn\\cfn-credentials",
                                            " --region ",
                                            {
                                                "Ref" : "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\RunCommand.bat"                 : {
                                "content" : "%~1\nIF %ERRORLEVEL% GTR 10 ( exit /b 1 ) else ( exit /b 0 )"
                            },
                            "C:\\cfn\\scripts\\PSISE.ps1"              : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "import-module servermanager",
                                            "\n",
                                            "add-windowsfeature powershell-ise",
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\RDGW.ps1"               : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "import-module servermanager",
                                            "\n",
                                            "add-windowsfeature RDS-Gateway -IncludeAllSubFeature",
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\scripts\\SetDNSOnNIC.ps1"        : {
                                "content" : {
                                    "Fn::Join" : [
                                        "\n",
                                        [
                                            "param($Gateway1,$Gateway2)",
                                            "$NICs = Get-WMIObject Win32_NetworkAdapterConfiguration | where{$_.IPEnabled -eq \"TRUE\"}",
                                            "\n",
                                            "Foreach($NIC in $NICs) {$DNSServers = \"$Gateway1\",\"$Gateway2\"",
                                            "\n",
                                            "$NIC.SetDNSServerSearchOrder($DNSServers)",
                                            "\n",
                                            "$NIC.SetDynamicDNSRegistration(\"TRUE\")}",
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\RenameComputer.ps1"     : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "$sysInfo = Get-WmiObject -Class Win32_ComputerSystem",
                                            "\n",
                                            "$sysInfo.Rename(\"RDGW2\")",
                                            "\n"
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "rename"     : {
                        "commands" : {
                            "1-execute-powershell-script-RenameComputer" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " C:\\cfn\\scripts\\RenameComputer.ps1"
                                        ]
                                    ]
                                }
                            },
                            "2-reboot"                                   : {
                                "command" : "shutdown -r -t 1"
                            }
                        }
                    },
                    "join"       : {
                        "commands" : {
                            "1-set-dns-on-nic" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " c:\\cfn\\scripts\\SetDNSOnNIC.ps1 ",
                                            {
                                                "Ref" : "AD1PrivateIp"
                                            },
                                            " ",
                                            {
                                                "Ref" : "AD2PrivateIp"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "2-join-domain"    : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "NETDOM join localhost /Domain:",
                                            {
                                                "Ref" : "DomainDNSName"
                                            },
                                            " /userd:",
                                            {
                                                "Ref" : "DomainAdminUser"
                                            },
                                            " /passwordd:",
                                            {
                                                "Ref" : "DomainAdminPassword"
                                            },
                                            " /reboot"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "forever"
                            },
                            "3-add-local-admin" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "net localgroup \"Administrators\" \"",
                                            {
                                                "Ref" : "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref" : "DomainAdminUser"
                                            },
                                            "\" /add"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            }
                        }
                    },
                    "finalize"   : {
                        "commands" : {
                            "1-execute-powershell-script-PSISE" : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " C:\\cfn\\scripts\\PSISE.ps1"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "2-execute-powershell-script-RDGW"  : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " Unrestricted",
                                            " C:\\cfn\\scripts\\RDGW.ps1"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "3-signal-success"                  : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "cfn-signal.exe -e 0 \"",
                                            {
                                                "Ref" : "RDGW2WaitHandle"
                                            },
                                            "\""
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties" : {
                "ImageId" : {
                    "Fn::FindInMap" : [
                        "AWSRegionArch2AMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        {
                            "Fn::FindInMap" : [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref" : "AD2InstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType" : {
                    "Ref" : "RDGWInstanceType"
                },
                "SubnetId"     : {
                    "Ref" : "DMZ2Subnet"
                },
                "Tags"         : [
                    {
                        "Key" : "Name",
                        "Value" : "RDGW2"
                    }
                ],
                "SecurityGroupIds" : [
                    {
                        "Ref" : "RDGWSecurityGroup"
                    },
                    {
                        "Ref" : "DomainMemberSG"
                    }
                ],
                "KeyName"          : {
                    "Ref" : "KeyPairName"
                },
                "UserData"         : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref" : "AWS::StackName"
                                },
                                " -r RDGateway2 ",
                                " --access-key ",
                                {
                                    "Ref" : "IAMUserAccessKey"
                                },
                                " --secret-key ",
                                {
                                    "Fn::GetAtt" : [
                                        "IAMUserAccessKey",
                                        "SecretAccessKey"
                                    ]
                                },
                                " --region ",
                                {
                                    "Ref" : "AWS::Region"
                                },
                                "\n",
                                "SCHTASKS /Create /SC MINUTE /MO 10 /TN cfn-hup /RU SYSTEM /TR \"cfn-hup.exe -v --no-daemon\"",
                                "\n",
                                "</script>"
                            ]
                        ]
                    }
                }
            }
        },
        "DomainControllerWaitCondition"       : {
            "Type" : "AWS::CloudFormation::WaitCondition",
            "DependsOn" : "DomainController",
            "Properties" : {
                "Handle" : {
                    "Ref" : "DomainControllerWaitHandle"
                },
                "Timeout" : "3000"
            }
        },
        "DomainControllerWaitHandle"          : {
            "Type" : "AWS::CloudFormation::WaitConditionHandle"
        },
        "DomainController2WaitCondition"      : {
            "Type" : "AWS::CloudFormation::WaitCondition",
            "DependsOn" : "DomainController2",
            "Properties" : {
                "Handle" : {
                    "Ref" : "DomainController2WaitHandle"
                },
                "Timeout" : "3000"
            }
        },
        "DomainController2WaitHandle"         : {
            "Type" : "AWS::CloudFormation::WaitConditionHandle"
        },
        "RDGWWaitCondition"                   : {
            "Type" : "AWS::CloudFormation::WaitCondition",
            "DependsOn" : "RDGateway",
            "Properties" : {
                "Handle" : {
                    "Ref" : "RDGWWaitHandle"
                },
                "Timeout" : "1800"
            }
        },
        "RDGWWaitHandle"                      : {
            "Type" : "AWS::CloudFormation::WaitConditionHandle"
        },
        "RDGW2WaitCondition"                  : {
            "Type" : "AWS::CloudFormation::WaitCondition",
            "DependsOn" : "RDGateway2",
            "Properties" : {
                "Handle" : {
                    "Ref" : "RDGW2WaitHandle"
                },
                "Timeout" : "1800"
            }
        },
        "RDGW2WaitHandle"                     : {
            "Type" : "AWS::CloudFormation::WaitConditionHandle"
        },
        "FirstDomainControllerSG"             : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Domain Controller",
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "123",
                        "ToPort"     : "123",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "135",
                        "ToPort"     : "135",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "138",
                        "ToPort"     : "138",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "445",
                        "ToPort"     : "445",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "445",
                        "ToPort"     : "445",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "464",
                        "ToPort"     : "464",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "464",
                        "ToPort"     : "464",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "49152",
                        "ToPort"     : "65535",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "49152",
                        "ToPort"     : "65535",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "389",
                        "ToPort"     : "389",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "389",
                        "ToPort"     : "389",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "636",
                        "ToPort"     : "636",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3268",
                        "ToPort"     : "3268",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3269",
                        "ToPort"     : "3269",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "53",
                        "ToPort"     : "53",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "53",
                        "ToPort"     : "53",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "88",
                        "ToPort"     : "88",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "88",
                        "ToPort"     : "88",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "67",
                        "ToPort"     : "67",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "2535",
                        "ToPort"     : "2535",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "123",
                        "ToPort"     : "123",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "135",
                        "ToPort"     : "135",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "138",
                        "ToPort"     : "138",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "445",
                        "ToPort"     : "445",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "445",
                        "ToPort"     : "445",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "464",
                        "ToPort"     : "464",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "464",
                        "ToPort"     : "464",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "49152",
                        "ToPort"     : "65535",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "49152",
                        "ToPort"     : "65535",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "389",
                        "ToPort"     : "389",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "389",
                        "ToPort"     : "389",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "636",
                        "ToPort"     : "636",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3268",
                        "ToPort"     : "3268",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3269",
                        "ToPort"     : "3269",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "53",
                        "ToPort"     : "53",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "53",
                        "ToPort"     : "53",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "88",
                        "ToPort"     : "88",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "88",
                        "ToPort"     : "88",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "67",
                        "ToPort"     : "67",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "2535",
                        "ToPort"     : "2535",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3389",
                        "ToPort"     : "3389",
                        "CidrIp"     : {
                            "Ref" : "DMZ1CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3389",
                        "ToPort"     : "3389",
                        "CidrIp"     : {
                            "Ref" : "DMZ2CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "icmp",
                        "FromPort"   : "-1",
                        "ToPort"     : "-1",
                        "CidrIp"     : {
                            "Ref" : "DMZ1CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "icmp",
                        "FromPort"   : "-1",
                        "ToPort"     : "-1",
                        "CidrIp"     : {
                            "Ref" : "DMZ2CIDR"
                        }
                    }
                ]
            }
        },
        "SecondDomainControllerSG"            : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Domain Controller 2",
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "123",
                        "ToPort"     : "123",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "135",
                        "ToPort"     : "135",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "138",
                        "ToPort"     : "138",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "445",
                        "ToPort"     : "445",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "445",
                        "ToPort"     : "445",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "464",
                        "ToPort"     : "464",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "464",
                        "ToPort"     : "464",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "49152",
                        "ToPort"     : "65535",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "49152",
                        "ToPort"     : "65535",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "389",
                        "ToPort"     : "389",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "389",
                        "ToPort"     : "389",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "636",
                        "ToPort"     : "636",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3268",
                        "ToPort"     : "3268",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3269",
                        "ToPort"     : "3269",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "53",
                        "ToPort"     : "53",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "53",
                        "ToPort"     : "53",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "88",
                        "ToPort"     : "88",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "88",
                        "ToPort"     : "88",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "67",
                        "ToPort"     : "67",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "2535",
                        "ToPort"     : "2535",
                        "SourceSecurityGroupId" : {
                            "Ref" : "FirstDomainControllerSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "123",
                        "ToPort"     : "123",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "135",
                        "ToPort"     : "135",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "138",
                        "ToPort"     : "138",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "445",
                        "ToPort"     : "445",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "445",
                        "ToPort"     : "445",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "464",
                        "ToPort"     : "464",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "464",
                        "ToPort"     : "464",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "49152",
                        "ToPort"     : "65535",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "49152",
                        "ToPort"     : "65535",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "389",
                        "ToPort"     : "389",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "389",
                        "ToPort"     : "389",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "636",
                        "ToPort"     : "636",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3268",
                        "ToPort"     : "3268",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3269",
                        "ToPort"     : "3269",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "53",
                        "ToPort"     : "53",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "53",
                        "ToPort"     : "53",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "88",
                        "ToPort"     : "88",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "88",
                        "ToPort"     : "88",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "67",
                        "ToPort"     : "67",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "2535",
                        "ToPort"     : "2535",
                        "SourceSecurityGroupId" : {
                            "Ref" : "DomainMemberSG"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3389",
                        "ToPort"     : "3389",
                        "CidrIp"     : {
                            "Ref" : "DMZ1CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3389",
                        "ToPort"     : "3389",
                        "CidrIp"     : {
                            "Ref" : "DMZ2CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "icmp",
                        "FromPort"   : "-1",
                        "ToPort"     : "-1",
                        "CidrIp"     : {
                            "Ref" : "DMZ1CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "icmp",
                        "FromPort"   : "-1",
                        "ToPort"     : "-1",
                        "CidrIp"     : {
                            "Ref" : "DMZ2CIDR"
                        }
                    }
                ]
            }
        },
        "DomainMemberSG"                      : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Domain Members",
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "53",
                        "ToPort"     : "53",
                        "CidrIp"     : {
                            "Ref" : "PrivSub1CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "53",
                        "ToPort"     : "53",
                        "CidrIp"     : {
                            "Ref" : "PrivSub1CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "49152",
                        "ToPort"     : "65535",
                        "CidrIp"     : {
                            "Ref" : "PrivSub1CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "49152",
                        "ToPort"     : "65535",
                        "CidrIp"     : {
                            "Ref" : "PrivSub1CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "53",
                        "ToPort"     : "53",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "53",
                        "ToPort"     : "53",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "49152",
                        "ToPort"     : "65535",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "49152",
                        "ToPort"     : "65535",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3389",
                        "ToPort"     : "3389",
                        "CidrIp"     : {
                            "Ref" : "DMZ1CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3389",
                        "ToPort"     : "3389",
                        "CidrIp"     : {
                            "Ref" : "DMZ2CIDR"
                        }
                    }
                ]
            }
        },
        "NAT1SecurityGroup"                   : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enables SSH access to NAT1 in AZ1 via port 22",
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "22",
                        "ToPort"     : "22",
                        "CidrIp"     : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "icmp",
                        "FromPort"   : "-1",
                        "ToPort"     : "-1",
                        "CidrIp"     : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "-1",
                        "FromPort"   : "1",
                        "ToPort"     : "65535",
                        "CidrIp"     : {
                            "Ref" : "PrivSub1CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "icmp",
                        "FromPort"   : "-1",
                        "ToPort"     : "-1",
                        "CidrIp"     : {
                            "Ref" : "PrivSub1CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "-1",
                        "FromPort"   : "1",
                        "ToPort"     : "65535",
                        "CidrIp"     : {
                            "Ref" : "PrivSub2CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "icmp",
                        "FromPort"   : "-1",
                        "ToPort"     : "-1",
                        "CidrIp"     : {
                            "Ref" : "PrivSub2CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "-1",
                        "FromPort"   : "1",
                        "ToPort"     : "65535",
                        "CidrIp"     : {
                            "Ref" : "PrivSub3CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "icmp",
                        "FromPort"   : "-1",
                        "ToPort"     : "-1",
                        "CidrIp"     : {
                            "Ref" : "PrivSub3CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "-1",
                        "FromPort"   : "1",
                        "ToPort"     : "65535",
                        "CidrIp"     : {
                            "Ref" : "PrivSub4CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "icmp",
                        "FromPort"   : "-1",
                        "ToPort"     : "-1",
                        "CidrIp"     : {
                            "Ref" : "PrivSub4CIDR"
                        }
                    }
                ]
            }
        },
        "NAT2SecurityGroup"                   : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enables SSH access to NAT2 in AZ2 via port 22",
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "22",
                        "ToPort"     : "22",
                        "CidrIp"     : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "icmp",
                        "FromPort"   : "-1",
                        "ToPort"     : "-1",
                        "CidrIp"     : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "-1",
                        "FromPort"   : "1",
                        "ToPort"     : "65535",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "icmp",
                        "FromPort"   : "-1",
                        "ToPort"     : "-1",
                        "CidrIp"     : {
                            "Ref" : "PrivSub5CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "-1",
                        "FromPort"   : "1",
                        "ToPort"     : "65535",
                        "CidrIp"     : {
                            "Ref" : "PrivSub6CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "icmp",
                        "FromPort"   : "-1",
                        "ToPort"     : "-1",
                        "CidrIp"     : {
                            "Ref" : "PrivSub6CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "-1",
                        "FromPort"   : "1",
                        "ToPort"     : "65535",
                        "CidrIp"     : {
                            "Ref" : "PrivSub7CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "icmp",
                        "FromPort"   : "-1",
                        "ToPort"     : "-1",
                        "CidrIp"     : {
                            "Ref" : "PrivSub7CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "-1",
                        "FromPort"   : "1",
                        "ToPort"     : "65535",
                        "CidrIp"     : {
                            "Ref" : "PrivSub8CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "icmp",
                        "FromPort"   : "-1",
                        "ToPort"     : "-1",
                        "CidrIp"     : {
                            "Ref" : "PrivSub8CIDR"
                        }
                    }
                ]
            }
        },
        "RDGWSecurityGroup"                   : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enable RDP access from the Internet",
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3389",
                        "ToPort"     : "3389",
                        "CidrIp"     : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "icmp",
                        "FromPort"   : "-1",
                        "ToPort"     : "-1",
                        "CidrIp"     : "0.0.0.0/0"
                    }
                ]
            }
        },
        "SQLSecurityGroup"                    : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enable 1433 and 1434 for SQL APP and WFE instances",
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "1433",
                        "ToPort"     : "1434",
                        "CidrIp"     : {
                            "Ref" : "PrivSub3CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "1433",
                        "ToPort"     : "1434",
                        "CidrIp"     : {
                            "Ref" : "PrivSub4CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "1433",
                        "ToPort"     : "1434",
                        "CidrIp"     : {
                            "Ref" : "PrivSub7CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "1433",
                        "ToPort"     : "1434",
                        "CidrIp"     : {
                            "Ref" : "PrivSub8CIDR"
                        }
                    }
                ]
            }
        },
        "APPSecurityGroup"                    : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enable APP Server Access from the WFE Servers",
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "80",
                        "ToPort"     : "80",
                        "CidrIp"     : {
                            "Ref" : "PrivSub4CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "5000",
                        "ToPort"     : "5000",
                        "CidrIp"     : {
                            "Ref" : "PrivSub4CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "32843",
                        "ToPort"     : "32843",
                        "CidrIp"     : {
                            "Ref" : "PrivSub4CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "32844",
                        "ToPort"     : "32844",
                        "CidrIp"     : {
                            "Ref" : "PrivSub4CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "80",
                        "ToPort"     : "80",
                        "CidrIp"     : {
                            "Ref" : "PrivSub8CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "5000",
                        "ToPort"     : "5000",
                        "CidrIp"     : {
                            "Ref" : "PrivSub8CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "32843",
                        "ToPort"     : "32843",
                        "CidrIp"     : {
                            "Ref" : "PrivSub8CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "32844",
                        "ToPort"     : "32844",
                        "CidrIp"     : {
                            "Ref" : "PrivSub8CIDR"
                        }
                    }
                ]
            }
        },
        "WFESecurityGroup"                    : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Reserverd for future use - Needs to be updated to allow ingress from LoadBalancer SG",
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "icmp",
                        "FromPort"   : "-1",
                        "ToPort"     : "-1",
                        "CidrIp"     : {
                            "Ref" : "DMZ1CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "icmp",
                        "FromPort"   : "-1",
                        "ToPort"     : "-1",
                        "CidrIp"     : {
                            "Ref" : "DMZ2CIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "80",
                        "ToPort"     : "80",
                        "SourceSecurityGroupId" : {
                            "Ref" : "LBSecurityGroup"
                        }
                    }
                ]
            }
        },
        "LBSecurityGroup"                     : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Load Balancer SG allows access on Port 80 from anywhere",
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "icmp",
                        "FromPort"   : "-1",
                        "ToPort"     : "-1",
                        "CidrIp"     : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "80",
                        "ToPort"     : "80",
                        "CidrIp"     : "0.0.0.0/0"
                    }
                ]
            }
        }
    },
    "Outputs"                  : {
        "RDGW1ElasticIP" : {
            "Value" : {
                "Ref" : "RdgwEIP"
            },
            "Description" : "Elastic IP address of the first Remote Desktop Gateway (RDGW1) in AZ1"
        },
        "RDGW2ElasticIP" : {
            "Value" : {
                "Ref" : "Rdgw2EIP"
            },
            "Description" : "Elastic IP address of the second Remote Desktop Gateway (RDGW2) in AZ2"
        },
        "DomainAdmin"    : {
            "Value" : {
                "Fn::Join" : [
                    "",
                    [
                        {
                            "Ref" : "DomainNetBIOSName"
                        },
                        "\\StackAdmin"
                    ]
                ]
            },
            "Description" : "Domain administrator account"
        }
    }
}